from browser import document
from browser import html

#from .core import MDC


########################################################################
class Build:
    """"""

    #----------------------------------------------------------------------
    @classmethod
    def add(self, component):
        """"""
        document.__le__(component)
        return component
        #return component()


    ##----------------------------------------------------------------------
    #@classmethod
    #def __getattr__(self, component):
        #""""""
        #return lambda *args, **krargs:self.add(getattr(Components, component)(*args, **krargs))


    #----------------------------------------------------------------------
    @classmethod
    def styles(self, styles_list):
        """"""
        document.select('head')[0] <= [html.LINK(href=framework.static(style), type='text/css', rel='stylesheet') for style in styles_list]

    #----------------------------------------------------------------------
    @classmethod
    def scripts(self, styles_list):
        """"""
        document.select('head')[0] <= [html.SCRIPT(src=framework.static(style), type='text/javascript') for style in styles_list]




#########################################################################
#class htmlElement:
    #""""""

    ##----------------------------------------------------------------------
    #def __new__(self, element):
        #""""""
        #element.__getattr__ = self.__getattr__
        #return element


    ##----------------------------------------------------------------------
    #def __getattr__(self, attr):
        #""""""
        #name = self.getAttribute('mdc-name')

        #if attr is 'mdc':
            #return MDC.__mdc__(name, element=self)

        #elif attr is 'Foundation':
            #return MDC.__mdc__(name, element=self).mdc.foundation_


